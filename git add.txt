 cd (folder path)                         -example:  cd C:\Users\Praxis\Desktop\Code with Mosh\JavaScript\JS-BASICS (in command to work on this folder)

git init                                   - initialize git in chosen directory (folder (.git) will be added )   

                                           - make changes (update file, change/update code, add file, delete file in repository folder.....)

git add .                                  -add changes to be commited (ready to commit)

git status                                 -check status of that repo (what changed are made(ready to commit), what need commit))

git commit -m "7th test commit"            -commit changes (if were added to be commited (git add .))

git restore (file name)                    - example: git restore index.js (respore changes)

git restore --staged (file name)           - example: git restore --staged test2.txt     ;Undo commit for file: test2.txt

echo "This is a test file" > test2.txt     -create file in command field (on that folder). "This is a test file" - will be text in file, and file name

git log                                    - shows commits made

git branch -m old-name new-name            - change branch name (example from master to main)



Branch


git checkout -b features                  - create new branch name (features) and switch to it

git checkout main                         - switch to branch (main)

git branch -a                             - To see all local and remote branches, run git branch -a

git branch -r                             - To see all remote branch names, run git branch -r



Merge


First, we need to switch to the (main) branch (if changes/commit were made on (features) branch):
git checkout main

Now we merge the current branch (main) with (features):
git merge features

As (main) and (features) are essentially the same now, we can delete (features), as it is no longer needed
git branch -d features





